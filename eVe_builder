#!/bin/sh

architecture=$1
unit=0

case $architecture in
	"arm")
		variant=armv7
		base_image="FreeBSD-13.0-STABLE-arm-armv7-GENERICSD-20211021-e058d44fda3-247742.img"
		base_url="http://ftp.freebsd.org/pub/FreeBSD/snapshots/arm/armv7/ISO-IMAGES/13.0/"
		xbuild=1
		rootpart="s2a"
		create_user=0
		;;
	"amd64")
		variant=$architecture
		base_image="FreeBSD-13.0-RELEASE-amd64.raw"
		base_url="https://download.freebsd.org/ftp/releases/VM-IMAGES/13.0-RELEASE/amd64/Latest/"
		xbuild=0
		rootpart="p4"
		create_user=1
		growfs="+2G"
		;;
	*)
		echo "usage: $0 architecture"
		echo
		echo "Where architecture is one of 'arm', 'amd64'"
		exit 1
		;;
esac

image="eVe-${architecture}.img"

if [ $(id -u) -ne 0 ]; then
	echo "$0 must be run as root"
	exit 1
fi

if [ -f $image ]; then
	rm -f $image
fi

set -ex

if [ ! -f "${base_image}" ]; then
	if [ ! -f "${base_image}.xz" ]; then
		fetch "${base_url}/${base_image}.xz"
	fi
	unxz "${base_image}.xz"
fi

if [ "${xbuild}" -eq 1 -a ! -f "/usr/local/bin/qemu-${architecture}-static" ]; then
	pkg install -y qemu-user-static
	/usr/local/etc/rc.d/qemu_user_static start
fi

cp "${base_image}" "${image}"

if [ -n "$growfs" ]; then
	truncate -s "${growfs}" $image
fi

ggatel create -u $unit $image

sleep 2

if [ -n "$growfs" ]; then
	gpart recover /dev/ggate${unit}
	gpart resize -i $(echo $rootpart | sed 's/^[^0-9]*\([0-9]*\).*$/\1/') /dev/ggate${unit}
	growfs -y /dev/ggate${unit}${rootpart}
fi

target=$(mktemp -d)

mount /dev/ggate${unit}${rootpart} $target
/sbin/mount -t devfs devfs $target/dev

cp -R image-overlay/* $target

mkdir -p $target/usr/local/bin

if [ "${xbuild}" -eq 1 ]; then
	cp /usr/local/bin/qemu-${architecture}-static $target/usr/local/bin
fi

if [ "$architecture" = "arm" ]; then
	chroot $target /usr/sbin/pkg install -y sqlite3 rubygem-bundler git-lite node10
fi

if [ "$architecture" = "amd64" ]; then
	chroot $target /usr/sbin/pkg install -y sqlite3 rubygem-bundler git-lite node14
fi

if [ "$architecture" = "arm" ]; then
	chroot $target /usr/bin/sed -i '' -e 's|/nxb-bin||g' "/usr/local/lib/ruby/2.7/armv7-freebsd13/rbconfig.rb"
fi

if [ "$create_user" -eq 1 ]; then
	chroot $target /usr/sbin/pw user add freebsd -m
fi

chroot $target /usr/bin/su - freebsd -c "git clone --branch Work https://github.com/atomecorp/atome.git /home/freebsd/atome"
chroot $target /usr/bin/su - freebsd -c "git clone --branch master https://github.com/atomecorp/third_parties.git /home/freebsd/atome/www/public/js/third_parties"
chroot $target /usr/bin/su - freebsd -c "git clone --branch master https://github.com/atomecorp/eVe.git /home/freebsd/atome/eVe"



chroot $target /usr/bin/su - freebsd -c "cd /home/freebsd/atome && bundle config path /home/freebsd/.vendor"
chroot $target /usr/bin/su - freebsd -c "bundle config set without 'electron rhodes development'"
chroot $target /usr/bin/su - freebsd -c "cd /home/freebsd/atome && bundle install -j4"

if [ "${xbuild}" -eq 1 ]; then
	rm $target/usr/local/bin/qemu-arm-static
fi

umount $target/dev
umount $target

ggatel destroy -u $unit
